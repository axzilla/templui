package components

// AlertVariant represents the visual style of the alert.
type AlertVariant string

// Constants for alert variants.
const (
	DefaultAlert     AlertVariant = "default"
	DestructiveAlert AlertVariant = "destructive"
)

// AlertProps defines the properties for the Alert component.
type AlertProps struct {
	// Variant determines the visual style of the alert.
	// Default: DefaultAlert
	Variant AlertVariant
	// Class specifies additional CSS classes to apply to the alert.
	// Default: "" (empty string)
	Class string
}

// getAlertVariantClasses returns the CSS classes for the given alert variant.
func getAlertVariantClasses(variant AlertVariant) string {
	switch variant {
	case DestructiveAlert:
		return "border-destructive text-destructive"
	default:
		return "border-border text-foreground"
	}
}

// Alert renders an alert component based on the provided props and children.
// It can be customized with two visual styles: Default and Destructive.
// All content, including icons, should be passed in as children.
//
// Usage:
//
//	@components.Alert(components.AlertProps{Variant: components.DestructiveAlert}) {
//	  @components.ExclamationTriangleIcon()
//	  @components.AlertTitle{"Error"}
//	  @components.AlertDescription{"Your session has expired. Please log in again."}
//	}
//
// Props:
//   - Variant: The visual style of the alert (DefaultAlert or DestructiveAlert). Default: DefaultAlert
//   - Class: Additional CSS classes to apply to the alert. Default: "" (empty string)
templ Alert(props AlertProps) {
	<div
		class={ "relative w-full rounded-lg border p-4 [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg+div]:translate-y-[-3px] [&:has(svg)]:pl-11",
			getAlertVariantClasses(props.Variant),
			props.Class }
		role="alert"
	>
		{ children... }
	</div>
}

// AlertTitle renders the title of the alert.
templ AlertTitle() {
	<h5 class="mb-1 font-medium leading-none tracking-tight">
		{ children... }
	</h5>
}

// AlertDescription renders the description of the alert.
templ AlertDescription() {
	<div class="text-sm [&_p]:leading-relaxed">
		{ children... }
	</div>
}
