package components

type ButtonVariant string
type ButtonSize string

const (
	Default   ButtonVariant = "default"
	Primary   ButtonVariant = "primary"
	Secondary ButtonVariant = "secondary"
	Accent    ButtonVariant = "accent"
	Ghost     ButtonVariant = "ghost"
	Link      ButtonVariant = "link"

	Small  ButtonSize = "sm"
	Medium ButtonSize = "md"
	Large  ButtonSize = "lg"
)

type ButtonProps struct {
	Text      string
	Variant   ButtonVariant
	Size      ButtonSize
	Disabled  bool
	FullWidth bool
	OnClick   templ.ComponentScript
	HxGet     templ.SafeURL
	HxPost    templ.SafeURL
	HxTrigger string
	HxTarget  string
	Class     string
}

func getVariantClasses(variant ButtonVariant) string {
	switch variant {
	case Primary:
		return "bg-blue-500 text-white hover:bg-blue-600 focus:ring-blue-300"
	case Secondary:
		return "bg-gray-500 text-white hover:bg-gray-600 focus:ring-gray-300"
	case Accent:
		return "bg-purple-500 text-white hover:bg-purple-600 focus:ring-purple-300"
	case Ghost:
		return "bg-transparent hover:bg-gray-100 text-gray-700"
	case Link:
		return "bg-transparent text-blue-500 hover:underline"
	default:
		return "bg-white border border-gray-300 text-gray-700 hover:bg-gray-50 focus:ring-blue-300"
	}
}

func getSizeClasses(size ButtonSize) string {
	switch size {
	case Small:
		return "px-2 py-1 text-sm"
	case Large:
		return "px-6 py-3 text-lg"
	default:
		return "px-4 py-2 text-base"
	}
}

templ Button(props ButtonProps) {
	<button
		class={
			"font-medium rounded-lg transition-colors focus:outline-none focus:ring-2 focus:ring-opacity-50",
			getVariantClasses(props.Variant),
			getSizeClasses(props.Size),
			templ.KV("opacity-50 cursor-not-allowed", props.Disabled),
			templ.KV("w-full", props.FullWidth),
			props.Class,
		}
		disabled?={ props.Disabled }
		onClick={ props.OnClick }
		if props.HxGet != "" {
			hx-get={ string(props.HxGet) }
		}
		if props.HxPost != "" {
			hx-post={ string(props.HxPost) }
		}
		if props.HxTrigger != "" {
			hx-trigger={ props.HxTrigger }
		}
		if props.HxTarget != "" {
			hx-target={ props.HxTarget }
		}
	>
		{ props.Text }
	</button>
}
